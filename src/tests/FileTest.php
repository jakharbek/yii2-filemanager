<?php

namespace jakharbek\filemanager\tests;

use jakharbek\filemanager\dto\FileUploadDTO;
use jakharbek\filemanager\dto\GeneratedPathFileDTO;
use jakharbek\filemanager\dto\GeneratePathFileDTO;
use jakharbek\filemanager\factories\FileFactory;
use jakharbek\filemanager\interfaces\FileFactoryInterface;
use jakharbek\filemanager\interfaces\FileServiceInterface;
use jakharbek\filemanager\services\FileService;
use PHPUnit\Framework\TestCase;
use Yii;
use yii\web\UploadedFile;

/**
 * Class FileTest
 * @package jakharbek\filemanager\tests
 */
class FileTest extends TestCase
{
    /**
     * @var FileService
     */
    public $service;

    public function __construct($name = null, array $data = [], $dataName = '')
    {
        parent::__construct($name, $data, $dataName);
        ini_set('display_errors', 1);
        ini_set('display_startup_errors', 1);
        error_reporting(E_ALL);
    }

    public function setUp(): void
    {
        Yii::setAlias('@static', __DIR__ . "/static");
        Yii::$container->set(FileFactoryInterface::class, FileFactory::class);
        Yii::$container->set(FileServiceInterface::class, FileService::class);
        $this->service = Yii::$container->get(FileServiceInterface::class);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testExample()
    {
        $this->assertFalse(false);
    }

    public function testGeneratePath()
    {
        $generatePathFileDTO = new GeneratePathFileDTO();
        $uploadFile = new UploadedFile();
        $uploadFile->tempName = __DIR__ . "/data/test1.txt";
        $uploadFile->name = "test1.txt";
        $uploadFile->size = 200;
        $uploadFile->type = "text/plain";
        $uploadFile->error = UPLOAD_ERR_OK;
        $generatePathFileDTO->file = $uploadFile;
        $data = $this->service->generatePath($generatePathFileDTO);
        $this->assertInstanceOf(GeneratedPathFileDTO::class, $data, 'Is not instance');
        $this->assertDirectoryExists($data->file_folder, 'Dir is not created');
    }

    public function testUpload()
    {

        $fileUpload = new FileUploadDTO();
        $uploadFile = new UploadedFile();
        $uploadFile->tempName = __DIR__ . "/data/test2.jpg";
        $uploadFile->name = "test2.jpg";
        $uploadFile->size = 1400;
        $uploadFile->type = "image/jpg";
        $uploadFile->error = UPLOAD_ERR_OK;
        $fileUpload->files[] = $uploadFile;
        $fileUploadedDTO = $this->service->upload($fileUpload);
        $uploadedFile = current($fileUploadedDTO->uploadedFiles);
        /**
         * @var $uploadedFileData UploadedFile
         */
        $uploadedFileData = $uploadedFile['UploadedFile'];

        /**
         * @var $GeneratedPathFileDTO GeneratedPathFileDTO
         */
        $GeneratedPathFileDTO = $uploadedFile['GeneratedPathFileDTO'];
        $this->service->createThumbsImage($GeneratedPathFileDTO->file_path, $GeneratedPathFileDTO->file_folder, $GeneratedPathFileDTO->file_name, $GeneratedPathFileDTO->file_ext);

        $this->assertInstanceOf(GeneratedPathFileDTO::class, $GeneratedPathFileDTO, 'Is not instance');
        $this->assertDirectoryExists($GeneratedPathFileDTO->file_folder, 'Dir is not created');
        $this->assertFileExists($GeneratedPathFileDTO->file_path, 'File is not created');
        $this->assertNotEmpty($GeneratedPathFileDTO->file_name);
        $this->assertNotEmpty($GeneratedPathFileDTO->file_ext);
        $this->assertNotEmpty($GeneratedPathFileDTO->created_at);

    }
}